<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Viztor]]></title>
  <subtitle><![CDATA[Life is a journey.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://viztor.me/"/>
  <updated>2014-08-16T00:17:02.547Z</updated>
  <id>http://viztor.me/</id>
  
  <author>
    <name><![CDATA[ViztorIx]]></name>
    <email><![CDATA[viztor@outlook.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Write the code, change the world - WWDC14]]></title>
    <link href="http://viztor.me/2014/06/05/Write-the-code,-change-the-world---WWDC14/"/>
    <id>http://viztor.me/2014/06/05/Write-the-code,-change-the-world---WWDC14/</id>
    <published>2014-06-05T11:36:04.000Z</published>
    <updated>2014-06-05T16:51:28.000Z</updated>
    <content type="html"><![CDATA[<p>6 月 2 号，苹果发布了新一代的 OS X 和 iOS8.</p>
]]></content>
    
    
  </entry>
  
  <entry>
    <title><![CDATA[[2, June]-One-day-in-Shanghai]]></title>
    <link href="http://viztor.me/2014/06/02/%5B2,%20June%5D-One-day-in-Shanghai/"/>
    <id>http://viztor.me/2014/06/02/[2, June]-One-day-in-Shanghai/</id>
    <published>2014-06-02T10:03:43.000Z</published>
    <updated>2014-06-05T16:54:03.000Z</updated>
    <content type="html"><![CDATA[<p>6 月 2 号，去了上海。<br> 昨天晚上做的英语听力播放器那篇文章，就是在车上写的。<br> 去的时候做的是高铁。快要到的时候。</p>
]]></content>
    
    
      <category term="IKEA" scheme="http://viztor.me/tags/IKEA/"/>
    
      <category term="FuDan University" scheme="http://viztor.me/tags/FuDan-University/"/>
    
      <category term="Shanghai" scheme="http://viztor.me/tags/Shanghai/"/>
    
      <category term="Life" scheme="http://viztor.me/categories/Life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Player for Listening Test in English]]></title>
    <link href="http://viztor.me/2014/06/02/Player-for-Listening-Test-in-English/"/>
    <id>http://viztor.me/2014/06/02/Player-for-Listening-Test-in-English/</id>
    <published>2014-06-02T02:32:56.000Z</published>
    <updated>2014-06-05T17:41:31.000Z</updated>
    <content type="html"><![CDATA[<p>放假这两天好像要做英语听力测试。听力还要去网上下载，所以一时手痒，就准备折腾个播放器玩玩。</p>
<p>本来打算从头开始做，不过既然发现了 <a href="http://www.kunr.me/" title="Kunnr 的博客" target="_blank" rel="external">Kunr 的博客</a> 上有<a href="http://www.kunr.me/fm" title="Kunnr 的电台" target="_blank" rel="external"> 电台 </a>。就去要了个源码。<br> 代码是托管在 Github 上面的。用了 HTML5 的 Audio API，JavaScript+jQuery 控制播放器，CSS3 样式。</p>
<p>因为默认的样式已经比较符合审美了（其实就是懒吧！摔桌。）<br>所以目前看起来样式和 Kunr 的电台几乎是一模一样的 -_-#<br>别扭的地方做了一点修改。<br>UI 上有很多的细节修改。但是可能不太看得出来 XD。<br>比如调整了播放列表项目的宽高，菜单动画，在此不表。</p>
<p>Kunr 的电台用了 AJAX 从一个虾米音乐信息获取站点获取数据。然后再加载。<br>虽然很喜欢虾米音乐。</p>
<p>很显然我要删掉它。</p>
<p>然后，就是要导入播放列表。<br>可是，名字很多中文，格式比较统一，重复内容比较多。<br>手动复制粘贴这种事情是在是反人类，所以除了一开始尝试的版本。后续版本的播放列表都是用一段可定制的 Javascript 代码自动生成的，如下</p>
<figure class="highlight [Javascript]"><figcaption><span>[Playlist.js]</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="keyword">var</span> playlist = [];
<span class="keyword">var</span> playlistPrefix = <span class="string">'14 年 PETS-2 模拟考场（'</span>;
<span class="keyword">var</span> playlistEndfix = <span class="string">'）'</span>;
<span class="keyword">var</span> playlistType = [<span class="string">"试题"</span>, <span class="string">"长对话"</span>, <span class="string">"短对话"</span>, <span class="string">"独白"</span>, <span class="string">"语音点拨"</span>, <span class="string">"13 年 9 月 PETS2 真题"</span>, <span class="string">"14 年 3 月 PETS2 真    题"</span>];
<span class="keyword">var</span> playlistTypeCount = [<span class="number">38</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>];
<span class="keyword">var</span> ChineseNumber = [<span class="string">'一'</span>, <span class="string">'二'</span>, <span class="string">'三'</span>, <span class="string">'四'</span>, <span class="string">'五'</span>, <span class="string">'六'</span>, <span class="string">'七'</span>, <span class="string">'八'</span>, <span class="string">'九'</span>];
<span class="keyword">var</span> i, j, listCountNum = <span class="string">''</span>, playlistItem = <span class="string">''</span>;
<span class="keyword">for</span> (i <span class="keyword">in</span> playlistType) {<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; playlistTypeCount[i]; j++) {listCountNum = playlistTypeCount[i] &lt; <span class="number">10</span> ? ChineseNumber[j] : j+<span class="number">1</span>;
        listCountNum = playlistTypeCount[i] === <span class="number">1</span> ? <span class="string">''</span> : listCountNum;
        playlistItem = playlistPrefix + playlistType[i] + listCountNum + playlistEndfix;
        playlist.push(playlistItem);
        }
    }
</pre></td></tr></table></figure>

<p>如果有时间的话（怎么可能！），可能还会修改成一个函数，并且自定义播放列表.js 之类的。</p>
<p>现在先写到这儿。要下车了，后续还会有更新 ing。<br>先放个地址吧：<a href="http://viztor.me/listening" title="听力播放器" target="_blank" rel="external">英语听力播放器</a></p>
<p>2014 年 6 月 6 日 <br> 又放假了，补更新（最近放的假还真是多啊。。）</p>
<p>Javascript 的部分，还重写了 randomNum()函数，有全部用 coffeescript 重写的想法💡</p>
<p>原来是这样的：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>var randomNum = function(<span class="built_in">min</span>,<span class="built_in">max</span>){var radx = Math.<span class="built_in">floor</span>(<span class="built_in">min</span> + Math.<span class="built_in">random</span>() * (<span class="built_in">max</span> - <span class="built_in">min</span>));
   <span class="keyword">if</span>(radx != localStorage.currentMusic)
       <span class="keyword">return</span> radx;
   <span class="keyword">else</span>
   <span class="keyword">return</span> Math.<span class="built_in">floor</span>(<span class="built_in">min</span> + Math.<span class="built_in">random</span>() * (<span class="built_in">max</span> - <span class="built_in">min</span>));
</pre></td></tr></table></figure>

<p>很明显不符合逻辑嘛。</p>
<p> 现在的</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="keyword">var</span> randomNum = <span class="function"><span class="keyword">function</span><span class="params">(min,max)</span>{</span>
    <span class="keyword">var</span> radx;
    <span class="keyword">while</span>(!radx || radx == localStorage.currentMusic)
    radx = <span class="built_in">Math</span>.floor(min + <span class="built_in">Math</span>.random() * (max - min));
    <span class="keyword">return</span> radx;
 }
</pre></td></tr></table></figure>

<p>重写了页面加载时候的判断逻辑, 调用了预定义的函数。比原来更符合逻辑一点。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="function">if(<span class="function">typeof(localStorage.prevplay)</span> == currentMusic || <span class="function">isNaN(localStorage.currentMusic)</span> || !playlist[localStorage.currentMusic] )</span>
    <span class="function">autoChange()</span>; else <span class="function">changeMusic(localStorage.currentMusic * <span class="number">1</span>)</span>;
</pre></td></tr></table></figure>

<p>现在差不多完成了基本的功能和没有差错的实现了，也有了顺眼点的界面了。</p>
<p>接下来可能会去绑定键盘操作，不过这样可能要把代码用面向对象的办法写一遍。</p>
]]></content>
    
    
      <category term="HTML5" scheme="http://viztor.me/tags/HTML5/"/>
    
      <category term="Javascript" scheme="http://viztor.me/tags/Javascript/"/>
    
      <category term="CSS" scheme="http://viztor.me/tags/CSS/"/>
    
      <category term="Works" scheme="http://viztor.me/categories/Works/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello, Hexo!]]></title>
    <link href="http://viztor.me/2014/05/31/Hello-Hexo/"/>
    <id>http://viztor.me/2014/05/31/Hello-Hexo/</id>
    <published>2014-05-31T06:53:00.000Z</published>
    <updated>2014-06-05T17:03:59.000Z</updated>
    <content type="html"><![CDATA[<p> 现在，开始使用 <a href="hexo.io">Hexo</a>！</p>
<p> 具体过程稍后更新。</p>
<p>Hexo 是一个台湾大学森开发的 <a href="nodejs.org">Node.js</a> 下的 Blog 框架。</p>
]]></content>
    
    
      <category term="Node.js" scheme="http://viztor.me/tags/Nodejs/"/>
    
      <category term="Hexo" scheme="http://viztor.me/tags/Hexo/"/>
    
      <category term="Blog" scheme="http://viztor.me/tags/Blog/"/>
    
  </entry>
  
</feed>
